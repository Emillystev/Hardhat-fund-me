{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__CallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotEnoughETH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc2e8c58af4d461661c3b74fd19c7268b5021b56d9b534a7faedf0086eec428a4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "839481",
    "logsBloom": "0x
    "blockHash": "0xbf9a59c76e0267d9711f617efb9e8082c51eed5d9773f72f1fa90c34c12973ee",
    "transactionHash": "0xc2e8c58af4d461661c3b74fd19c7268b5021b56d9b534a7faedf0086eec428a4",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "839481",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "256334a8468b782a57b6675d2417a99a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotEnoughETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\"; // yarn add --dev @chainlink/contracts\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\nerror FundMe__NotEnoughETH();\\nerror FundMe__CallFailed();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n    \\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        if(msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD){\\n            revert FundMe__NotEnoughETH();\\n        } \\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    // function getVersion() public view returns (uint256){\\n    //     // ETH/USD price feed address of Sepolia Network.\\n    //     AggregatorV3Interface s_priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n    //     return s_priceFeed.version();\\n    // }\\n    \\n    function withdraw() public onlyOwner {\\n        uint256 fundersLength = s_funders.length;\\n        for (uint256 funderIndex= 0; funderIndex < fundersLength; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        if(!callSuccess){\\n            revert FundMe__CallFailed();\\n        }\\n    }\\n\\n    function getOwner() external view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) external view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) external view returns(uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() external view returns(AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n\\n}\\n\\n\\n// yarn add -D hardhat-deploy     yarn add hardhat-deploy --dev\\n// yarn add --dev hardhat-deploy-ethers     npm install --save-dev @nomiclabs/hardhat-ethers@npm:hardhat-deploy-ethers ethers\\n\\n// yarn solhint contracts/*.sol\\n// eslint - way to lint js files\\n// sollint - way to lint solidity files\",\"keccak256\":\"0x59b2fdf91de3a71bc47c1183ed5a4d4ffae6b8c227d6638c03bc0b9bdce958c5\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\"; // yarn add --dev @chainlink/contracts\\n\\n// Why not an interface?\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        return ethAmountInUsd;\\n    }\\n}\\n\\n// 0x694AA1769357215DE4FAC081bf1f309aDC325306\",\"keccak256\":\"0xe2272be25d42f28ea03dea99595ca6ab334efcfc49be8ae1259e112383694928\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f30380380610f3083398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610dcb6101656000396000818161032401526105700152610dcb6000f3fe6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e81461010c5780639e87a5cd14610137578063b60d428814610162578063d7b4750c1461016c57610083565b80630343fb251461008d5780633ccfd60b146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107ec565b6102da565b6040516100c19190610832565b60405180910390f35b3480156100d657600080fd5b506100df610322565b005b3480156100ed57600080fd5b506100f661055f565b6040516101039190610832565b60405180910390f35b34801561011857600080fd5b5061012161056c565b60405161012e919061085c565b60405180910390f35b34801561014357600080fd5b5061014c610594565b60405161015991906108d6565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e919061091d565b6105be565b6040516101a0919061085c565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461060690919063ffffffff16565b1015610220576040517fb514e4ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026e9190610979565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180549050905060005b81811015610457576000600182815481106103d2576103d16109cf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044f906109fe565b9150506103b4565b50600067ffffffffffffffff81111561047357610472610a47565b5b6040519080825280602002602001820160405280156104a15781602001602082028036833780820191505090505b50600190805190602001906104b79291906106e2565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104de90610aa7565b60006040518083038185875af1925050503d806000811461051b576040519150601f19603f3d011682016040523d82523d6000602084013e610520565b606091505b505090508061055b576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600182815481106105d4576105d36109cf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061061283610642565b90506000670de0b6b3a7640000858361062b9190610abc565b6106359190610b45565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068b57600080fd5b505afa15801561069f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c39190610c03565b5050509150506402540be400816106da9190610c7e565b915050919050565b82805482825590600052602060002090810192821561075b579160200282015b8281111561075a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610702565b5b509050610768919061076c565b5090565b5b8082111561078557600081600090555060010161076d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b98261078e565b9050919050565b6107c9816107ae565b81146107d457600080fd5b50565b6000813590506107e6816107c0565b92915050565b60006020828403121561080257610801610789565b5b6000610810848285016107d7565b91505092915050565b6000819050919050565b61082c81610819565b82525050565b60006020820190506108476000830184610823565b92915050565b610856816107ae565b82525050565b6000602082019050610871600083018461084d565b92915050565b6000819050919050565b600061089c6108976108928461078e565b610877565b61078e565b9050919050565b60006108ae82610881565b9050919050565b60006108c0826108a3565b9050919050565b6108d0816108b5565b82525050565b60006020820190506108eb60008301846108c7565b92915050565b6108fa81610819565b811461090557600080fd5b50565b600081359050610917816108f1565b92915050565b60006020828403121561093357610932610789565b5b600061094184828501610908565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061098482610819565b915061098f83610819565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109c4576109c361094a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a0982610819565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a3c57610a3b61094a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a91600083610a76565b9150610a9c82610a81565b600082019050919050565b6000610ab282610a84565b9150819050919050565b6000610ac782610819565b9150610ad283610819565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b0b57610b0a61094a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b5082610819565b9150610b5b83610819565b925082610b6b57610b6a610b16565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b9581610b76565b8114610ba057600080fd5b50565b600081519050610bb281610b8c565b92915050565b6000819050919050565b610bcb81610bb8565b8114610bd657600080fd5b50565b600081519050610be881610bc2565b92915050565b600081519050610bfd816108f1565b92915050565b600080600080600060a08688031215610c1f57610c1e610789565b5b6000610c2d88828901610ba3565b9550506020610c3e88828901610bd9565b9450506040610c4f88828901610bee565b9350506060610c6088828901610bee565b9250506080610c7188828901610ba3565b9150509295509295909350565b6000610c8982610bb8565b9150610c9483610bb8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cd357610cd261094a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d1057610d0f61094a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d4d57610d4c61094a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d8a57610d8961094a565b5b82820290509291505056fea2646970667358221220eb40f896943f4a87523d36b0788ad9e72ef5dda06cbe5783a81cab395b3f8b1564736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e81461010c5780639e87a5cd14610137578063b60d428814610162578063d7b4750c1461016c57610083565b80630343fb251461008d5780633ccfd60b146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107ec565b6102da565b6040516100c19190610832565b60405180910390f35b3480156100d657600080fd5b506100df610322565b005b3480156100ed57600080fd5b506100f661055f565b6040516101039190610832565b60405180910390f35b34801561011857600080fd5b5061012161056c565b60405161012e919061085c565b60405180910390f35b34801561014357600080fd5b5061014c610594565b60405161015991906108d6565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e919061091d565b6105be565b6040516101a0919061085c565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461060690919063ffffffff16565b1015610220576040517fb514e4ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026e9190610979565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180549050905060005b81811015610457576000600182815481106103d2576103d16109cf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044f906109fe565b9150506103b4565b50600067ffffffffffffffff81111561047357610472610a47565b5b6040519080825280602002602001820160405280156104a15781602001602082028036833780820191505090505b50600190805190602001906104b79291906106e2565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104de90610aa7565b60006040518083038185875af1925050503d806000811461051b576040519150601f19603f3d011682016040523d82523d6000602084013e610520565b606091505b505090508061055b576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600182815481106105d4576105d36109cf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061061283610642565b90506000670de0b6b3a7640000858361062b9190610abc565b6106359190610b45565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068b57600080fd5b505afa15801561069f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c39190610c03565b5050509150506402540be400816106da9190610c7e565b915050919050565b82805482825590600052602060002090810192821561075b579160200282015b8281111561075a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610702565b5b509050610768919061076c565b5090565b5b8082111561078557600081600090555060010161076d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b98261078e565b9050919050565b6107c9816107ae565b81146107d457600080fd5b50565b6000813590506107e6816107c0565b92915050565b60006020828403121561080257610801610789565b5b6000610810848285016107d7565b91505092915050565b6000819050919050565b61082c81610819565b82525050565b60006020820190506108476000830184610823565b92915050565b610856816107ae565b82525050565b6000602082019050610871600083018461084d565b92915050565b6000819050919050565b600061089c6108976108928461078e565b610877565b61078e565b9050919050565b60006108ae82610881565b9050919050565b60006108c0826108a3565b9050919050565b6108d0816108b5565b82525050565b60006020820190506108eb60008301846108c7565b92915050565b6108fa81610819565b811461090557600080fd5b50565b600081359050610917816108f1565b92915050565b60006020828403121561093357610932610789565b5b600061094184828501610908565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061098482610819565b915061098f83610819565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109c4576109c361094a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a0982610819565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a3c57610a3b61094a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a91600083610a76565b9150610a9c82610a81565b600082019050919050565b6000610ab282610a84565b9150819050919050565b6000610ac782610819565b9150610ad283610819565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b0b57610b0a61094a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b5082610819565b9150610b5b83610819565b925082610b6b57610b6a610b16565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b9581610b76565b8114610ba057600080fd5b50565b600081519050610bb281610b8c565b92915050565b6000819050919050565b610bcb81610bb8565b8114610bd657600080fd5b50565b600081519050610be881610bc2565b92915050565b600081519050610bfd816108f1565b92915050565b600080600080600060a08688031215610c1f57610c1e610789565b5b6000610c2d88828901610ba3565b9550506020610c3e88828901610bd9565b9450506040610c4f88828901610bee565b9350506060610c6088828901610bee565b9250506080610c7188828901610ba3565b9150509295509295909350565b6000610c8982610bb8565b9150610c9483610bb8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cd357610cd261094a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d1057610d0f61094a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d4d57610d4c61094a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d8a57610d8961094a565b5b82820290509291505056fea2646970667358221220eb40f896943f4a87523d36b0788ad9e72ef5dda06cbe5783a81cab395b3f8b1564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 77,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}